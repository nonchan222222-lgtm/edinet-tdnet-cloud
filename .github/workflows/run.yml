name: EDINET/TDnet Downloader

on:
  workflow_dispatch:
    inputs:
      start:
        description: 'Start date (YYYY-MM-DD)'
        required: true
      end:
        description: 'End date (YYYY-MM-DD)'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Probe counts (EDINET/TDnet)
        env:
          EDINET_API_KEY: ${{ secrets.EDINET_API_KEY }}
        run: |
          set -e
          S="${{ github.event.inputs.start }}"
          E="${{ github.event.inputs.end }}"
          echo "Start=$S End=$E"

          echo "---- EDINET (first day only) ----"
          curl -s \
            --data-urlencode "date=$S" \
            --data-urlencode "type=2" \
            --data-urlencode "Subscription-Key=$EDINET_API_KEY" \
            "https://api.edinet-fsa.go.jp/api/v2/documents.json" > output.json

          echo "=== API Response ==="
          cat output.json || echo "(no output)"
          echo "==================="

          python - <<'PY'
import json, os

if not os.path.exists("output.json") or os.path.getsize("output.json") == 0:
    print("No output.json file or file is empty.")
else:
    try:
        with open("output.json", "r", encoding="utf-8") as f:
            data = json.load(f)
        print("results_count:", len(data.get("results", [])))
        if data.get("results"):
            r = data["results"][0]
            print("sample:", {k: r.get(k) for k in ("docID", "secCode", "fileName")})
    except json.JSONDecodeError as e:
        print("JSON decode error:", e)
PY

      - name: Run downloader
        env:
          EDINET_API_KEY: ${{ secrets.EDINET_API_KEY }}
          DEFAULT_CODES: ${{ secrets.DEFAULT_CODES }}
        run: |
          START="${{ github.event.inputs.start }}"
          END="${{ github.event.inputs.end }}"
          python edinet_tdnet_downloader.py "$START" "$END"
